heat_template_version: 2015-04-30

description: Template to create a CaaSP Master

parameters:
  name:
    type: string
    description: Name of server
  image:
    type: string
    description: Name of image to use for the master
    constraints:
      - custom_constraint: glance.image
  internal_net:
    type: string
    description: >
      Name or ID of private network for which the master will be attached
    default: floating
  external_net:
    type: string
    description: >
      Name or ID of public network for which floating IP addresses will be allocated
    default: floating
  secgroup_base:
    type: string
    description: >
      Name or ID of the base secgroup
  secgroup_master:
    type: string
    description: >
      Name or ID of the master secgroup
  flavor:
    type: string
    description: Master Flavor
    default: m1.xlarge
    constraints:
      - custom_constraint: nova.flavor
  keypair:
    type: string
    description: Master Keypair
    constraints:
      - custom_constraint: nova.keypair
  root_password:
    type: string
    description: Root Password for the master
    default: linux
  admin_node_ip:
    type: string
    description: Admin Node IP

resources:
  master:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      key_name: { get_param: keypair }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: master_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config

            disable_root: False
            ssh_deletekeys: False
            ssh_pwauth: True

            chpasswd:
              list: |
                root:$root_password
              expire: False

            suse_caasp:
              role: cluster
              admin_node: $admin_node
          params:
            $admin_node: { get_param: admin_node_ip }
            $root_password: { get_param: root_password }

  master_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: internal_net }
      security_groups:
        - { get_param: secgroup_base }
        - { get_param: secgroup_master }

  master_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_net }

  master_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: master_floating_ip }
      port_id: { get_resource: master_port }
